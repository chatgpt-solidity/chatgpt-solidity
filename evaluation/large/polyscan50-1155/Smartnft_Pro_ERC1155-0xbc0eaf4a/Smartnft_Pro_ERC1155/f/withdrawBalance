abstract contract Ownable is Context {
    address private _owner;

    /**
     * @dev Throws if called by any account other than the owner.
     */
    modifier onlyOwner() {
        _checkOwner();
        _;
    }

    /**
     * @dev Returns the address of the current owner.
     */
    function owner() public view virtual returns (address) {
        return _owner;

    }
    /**
     * @dev Throws if the sender is not the owner.
     */
    function _checkOwner() internal view virtual {
        require(owner() == _msgSender(), "Ownable: caller is not the owner");
    }
}

abstract contract Context {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }
}

contract Smartnft_Pro_ERC1155 is ERC1155, Ownable, Pausable, ERC1155Burnable, ERC1155Supply {
    function withdrawBalance() public onlyOwner returns( bool ) {
      uint _balance = address(this).balance;
      
      payable( msg.sender ).transfer( _balance );

      return true;
    }
}
