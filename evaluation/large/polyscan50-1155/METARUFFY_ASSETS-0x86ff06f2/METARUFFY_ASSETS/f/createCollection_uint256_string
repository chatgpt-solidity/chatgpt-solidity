abstract contract Ownable is Context {
    address private _owner;

    /**
     * @dev Returns the address of the current owner.
     */
    function owner() public view virtual returns (address) {
        return _owner;

    }
    /**
     * @dev Throws if called by any account other than the owner.
     */
    modifier onlyOwner() {
        require(owner() == _msgSender(), "Ownable: caller is not the owner");
        _;
    }
}

abstract contract Context {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }
}

contract METARUFFY_ASSETS is ERC1155, ERC2981, Ownable, ERC1155Burnable, ERC1155Supply {
    uint256 private _currentTokenID = 1;
    mapping(uint256 => string) private _tokenURIs;
    mapping(uint256 => uint256) private supplies;

    function createCollection(uint256 _maxSupply, string memory _collection_uri) public onlyOwner returns (uint256) {
        supplies[_currentTokenID] = _maxSupply;
        _tokenURIs[_currentTokenID] = _collection_uri;
        _currentTokenID++;
        return _currentTokenID - 1;
    }
}
