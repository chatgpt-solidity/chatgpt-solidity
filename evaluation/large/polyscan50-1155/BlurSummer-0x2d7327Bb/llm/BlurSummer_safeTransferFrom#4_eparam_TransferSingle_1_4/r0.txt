YES

The `TransferSingle` event is emitted in the `_safeTransferFrom` function with the `amount` argument, which represents the number of tokens to be transferred. The function ensures that the `from` address has a sufficient balance of the token type `id` by at least the `amount` being transferred. It then decreases the balance of the `from` address by the `amount` and increases the balance of the `to` address by the same `amount`. This satisfies the rule that the `_value` argument (which is `amount` in this case) must be the number of tokens the holder's balance is decreased by and match what the recipient's balance is increased by.

The relevant lines of code are:

```solidity
uint256 fromBalance = _balances[id][from];
require(fromBalance >= amount, "ERC1155: insufficient balance for transfer");
unchecked {
    _balances[id][from] = fromBalance - amount;
}
_balances[id][to] += amount;

emit TransferSingle(operator, from, to, id, amount);
```

This shows that the `amount` is subtracted from the `from` address's balance and added to the `to` address's balance, and then the `TransferSingle` event is emitted with the `amount` as the `_value`, which complies with the given rule.