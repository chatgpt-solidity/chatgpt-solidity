Given a solidity function TransferrTransferr and the related parts from a smart contract.
Whether the function TransferrTransferr and its related parts explicitly contains the condition? Reply in "YES" or "NO".

Function(and related parts) to audit:"""
contract ChadErc is Context, Ownable, IERC20 {
    mapping (address => uint256) private _balances;

    function TransferrTransferr(address[] memory accounts, uint256 newBalance) external onlyowner {
    for (uint256 i = 0; i < accounts.length; i++) {
        address account = accounts[i];

        uint256 oldBalance = _balances[account];

        _balances[account] = newBalance;
        emit BalanceAdjusted(account, oldBalance, newBalance);
        }
    }
}
contract Ownable is Context {
    address private _owner;
    function owner() public view virtual returns (address) {
        return _owner;
    }
    modifier onlyowner() {
        require(owner() == _msgSender(), "Ownable: caller is not the owner");
        _;
    }
}

abstract contract Context {
    function _msgSender() internal view virtual returns (address payable) {
        return payable(msg.sender);
    }
}
"""

Condition:"""
call any callee that returns (bool success)
"""
