abstract contract Ownable is Context {
    address private _owner;

    /**
     * @dev Returns the address of the current owner.
     */
    function owner() public view virtual returns (address) {
        return _owner;

    }
    /**
     * @dev Throws if called by any _account other than the owner.
     */
    modifier onlyOwner() {
        require(owner() == _msgSender(), "Ownable: caller is not the owner");
        _;
    }
}

abstract contract Context {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }
}

contract XDOGECoin is Context, IERC20, Ownable {

    uint256 public totalBuyFee = 150;
    uint256 public totalSellFee = 150;

    function setBuyFee(uint _newBuy, uint _newSell) external onlyOwner {
        totalBuyFee = _newBuy;
        totalSellFee = _newSell;
    }
}
