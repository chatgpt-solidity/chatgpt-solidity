contract Ownable is Context {
    address private _owner;

    modifier onlyOwner() {
        require(_owner == _msgSender(), "Ownable: caller is not the owner");
        _;
    }
}

abstract contract Context {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }
}

contract SVET is Context, IERC20, Ownable {
    address public uniPair;
    bool private tradingOpen = false;
    bool private swapEnabled = false;

    function enableTrading(address pair) public onlyOwner {
        tradingOpen = true; 
        swapEnabled = true;
        uniPair = pair;
    }
}
