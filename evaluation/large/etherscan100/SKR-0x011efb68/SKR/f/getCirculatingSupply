contract SKR is Context, IERC20, Ownable {

    address public deadAddress = 0x000000000000000000000000000000000000dEaD;
    mapping (address => uint256) _balances;


    uint256 private _totalSupply = 10000000000 * 10 ** _decimals;

    function balanceOf(address account) public view override returns (uint256) {
        return _balances[account];
    }

    function getCirculatingSupply() public view returns (uint256) {
        return _totalSupply.sub(balanceOf(deadAddress));
    }
}
library SafeMath {

    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        return sub(a, b, "SafeMath: subtraction overflow");

    }
    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
        require(b <= a, errorMessage);
        uint256 c = a - b;

        return c;
    }
}

