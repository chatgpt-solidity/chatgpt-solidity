Given a solidity function renounceOwnership and the related parts from a smart contract.
Whether the function renounceOwnership and its related parts explicitly contains the condition? Reply in "YES" or "NO".

Function(and related parts) to audit:"""
abstract contract Ownable {
    address private _owner;

    modifier onlyOwner() {
        _checkOwner();
        _;

    }
    function owner() public view virtual returns (address) {
        return _owner;

    }
    function _checkOwner() internal view virtual {
        require(owner() == msg.sender, "Ownable: caller is not the owner");
    }

    function renounceOwnership() public virtual onlyOwner {
        _transferOwnership(address(0));
    }

    function _transferOwnership(address newOwner) internal virtual {
        address oldOwner = _owner;
        _owner = newOwner;
        emit OwnershipTransferred(oldOwner, newOwner);
    }
}
"""

Condition:"""
call any callee that returns (bool success)
"""
