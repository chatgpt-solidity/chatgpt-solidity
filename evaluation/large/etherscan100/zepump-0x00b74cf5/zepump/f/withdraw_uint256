library SafeMath {
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {return a - b;}
        unchecked{require(b > 0, errorMessage); return a % b;}}}

contract zepump is IERC20, tokenStaking, Ownable {
    mapping(address => uint256) public amountStaked;
    uint256 public totalStaked;
    stakeIntegration internal stakingContract;

    function withdraw(uint256 amount) override external {
        require(amount <= amountStaked[msg.sender], "ERC20: Cannot unstake more than amount staked");
        stakingContract.stakingWithdraw(msg.sender, amount);
        amountStaked[msg.sender] = amountStaked[msg.sender].sub(amount);
        totalStaked = totalStaked.sub(amount);
        emit Withdraw(msg.sender, amount, block.timestamp);
    }
}
