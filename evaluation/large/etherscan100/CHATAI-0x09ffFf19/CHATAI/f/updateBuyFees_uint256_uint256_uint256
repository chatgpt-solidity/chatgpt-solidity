contract CHATAI is ERC20, Ownable {
    uint256 public buyTotalFees;
    uint256 public buyLotteryFee;
    uint256 public buyLiquidityFee;
    uint256 public buyTeamFee;
    function updateBuyFees(
        uint256 _lotteryFee,
        uint256 _liquidityFee,
        uint256 _teamFee
    ) external onlyOwner {
        buyLotteryFee = _lotteryFee;
        buyLiquidityFee = _liquidityFee;
        buyTeamFee = _teamFee;
        buyTotalFees = buyLotteryFee + buyLiquidityFee + buyTeamFee;
        require(buyTotalFees <= 50, "Buy fees must be <= 50.");
    }
}
abstract contract Ownable is Context {
    address internal _owner;
    function owner() public view virtual returns (address) {
        return _owner;
    }
    modifier onlyOwner() {
        require(owner() == _msgSender(), "Ownable: caller is not the owner");
        _;
    }
}

abstract contract Context {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }
}

