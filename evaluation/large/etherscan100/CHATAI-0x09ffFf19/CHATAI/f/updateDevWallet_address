abstract contract Ownable is Context {
    address internal _owner;
    function owner() public view virtual returns (address) {
        return _owner;
    }
    modifier onlyOwner() {
        require(owner() == _msgSender(), "Ownable: caller is not the owner");
        _;
    }
}

abstract contract Context {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }
}

contract CHATAI is ERC20, Ownable {
    address public devWallet;
    function updateDevWallet(address newLotteryWallet) external onlyOwner {
        emit lotteryWalletUpdated(newLotteryWallet, devWallet);
        devWallet = newLotteryWallet;
    }
}
