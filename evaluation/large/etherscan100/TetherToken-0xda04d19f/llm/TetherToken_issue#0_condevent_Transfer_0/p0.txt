Given a solidity function issue and the related parts from a smart contract.
Whether it explicitly contains the given action? Reply in "YES" or "NO".

Example of "initial token distribution" are provided below. 
Example:"""
construct <Contract Name> {
    constructor() {
        // tokens are transfer during the initial token distribution:
        balances[msg.sender] = total;
    }
}
"""



Function(and related parts) to audit:"""
pragma solidity 0.5.16;
contract Ownable is Context {
  address private _owner;

  /**
   * @dev Returns the address of the current owner.
   */
  function owner() public view returns (address) {
    return _owner;

  }
  /**
   * @dev Throws if called by any account other than the owner.
   */
  modifier onlyOwner() {
    require(_owner == _msgSender(), "Ownable: caller is not the owner");
    _;
  }
}

contract Context {

  function _msgSender() internal view returns (address payable) {
    return msg.sender;
  }
}

contract TetherToken is Pausable, StandardToken, BlackList {

    // Issue a new amount of tokens
    // these tokens are deposited into the owner address
    //
    // @param _amount Number of tokens to be issued
    function issue(uint amount) public onlyOwner {
        require(_totalSupply + amount > _totalSupply);
        require(balances[owner()] + amount > balances[owner()]);

        balances[owner()] += amount;
        _totalSupply += amount;
        emit Issue(amount);
    }
}
contract BasicToken is Ownable, ERC20Basic {

    mapping(address => uint) public balances;
}

contract ERC20Basic {
    uint public _totalSupply;
}
"""

Action:"""
tokens are transferred during the initial token distribution or crowdsale.
"""
