Given a solidity function constructor and the related parts from a smart contract.
Whether the function constructor and its related parts explicitly contains the condition? Reply in "YES" or "NO".

Function(and related parts) to audit:"""
library SafeMath {

    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        // assert(b > 0); // Solidity automatically throws when dividing by 0
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold
        return c;
    }
}

contract Context {
  // Empty internal constructor, to prevent people from mistakenly deploying
  // an instance of this contract, which should be used via inheritance.

  constructor () internal { }
  function _msgSender() internal view returns (address payable) {
    return msg.sender;
  }
}

contract TetherToken is Pausable, StandardToken, BlackList {

    string public name;
    string public symbol;
    uint public decimals;

    //  The contract can be initialized with a number of tokens
    //  All the tokens are deposited to the owner address
    //
    // @param _balance Initial supply of the contract
    // @param _name Token Name
    // @param _symbol Token symbol
    // @param _decimals Token decimals
  constructor(uint _initialSupply, string memory _name, string memory _symbol, uint _decimals) public {
    name = _name;
    symbol = _symbol;
    decimals = _decimals;
    _totalSupply = (_initialSupply).div(10**6);
    balances[msg.sender] = _totalSupply;

    emit Transfer(address(0), msg.sender, _totalSupply);
  }
}
contract BasicToken is Ownable, ERC20Basic {

    mapping(address => uint) public balances;
}

contract ERC20Basic {
    uint public _totalSupply;
}

contract Ownable is Context {
  address private _owner;

  /**
   * @dev Initializes the contract setting the deployer as the initial owner.
   */
  constructor () internal {
    address msgSender = _msgSender();
    _owner = msgSender;
    emit OwnershipTransferred(address(0), msgSender);
  }
}
"""

Condition:"""
call any callee that returns (bool success)
"""
