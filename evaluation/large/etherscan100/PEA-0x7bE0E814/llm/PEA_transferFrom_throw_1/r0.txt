YES

The `transferFrom` function in the provided Solidity code does not explicitly check for a transfer amount of zero before proceeding with the transfer logic. The SafeMath library is used for arithmetic operations, which includes checks for overflows and underflows, but it does not include a check that would prevent a transfer of zero value.

The `_transfer` function, which is called by `transferFrom`, has a `require` statement that checks if the `amount` is greater than zero:

```solidity
require(amount > 0, "Transfer amount must be greater than zero");
```

However, this check is designed to prevent transfers of amounts less than or equal to zero. If the `amount` is exactly zero, this check will fail and revert the transaction. Therefore, if a transfer of zero value is attempted, the function will throw due to this `require` statement.

Given this information, the correct answer to whether the `transferFrom` function and its related parts will not throw if transfers of 0 values is attempted is actually:

NO