Given a solidity function transferFrom and the related parts from a smart contract.
Whether the function transferFrom throws unless the _from account has deliberately authorized the sender of the message via some mechanism? Reply in "YES" or "NO"
Note: returning false is not throwing.

Example of authorization mechanism:
Example:"""
contract {
    function transferFrom(address sender, address recipient, uint256 amount) {
        transfer(...);
        _allowances[sender][msg.sender] -= amount;
        // omit other codes
    }
}
"""



Function(and related parts) to audit:"""
contract CheeseCakeERC is IERC20 {

    mapping(address => uint256) public balanceOf;
    mapping(address => mapping(address => uint256)) public allowance;

    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) external override returns (bool) {
        if (allowance[from][msg.sender] < type(uint).max) {
            allowance[from][msg.sender] -= amount;
        }
        return _transfer(from, to, amount);

    }
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) private returns (bool) {
        balanceOf[from] -= amount;
        balanceOf[to] += amount;
        emit Transfer(from, to, amount);
        return true;
    }
}
"""
