contract Ownable is Context {
    address internal _owner;
    modifier onlyOwner() {
        require(_owner == _msgSender(), "Ownable: caller is not the owner");
        _;
    }
}

abstract contract Context {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }
}

contract work is Context, IERC20, Ownable {
    mapping(address => bool) private _isExcludedFromMax;

    function excludeMultipleAccountsFromMax(address[] calldata accounts, bool excluded) public onlyOwner {
        for(uint256 i = 0; i < accounts.length; i++) {
            _isExcludedFromMax[accounts[i]] = excluded;
        }
    }
}
