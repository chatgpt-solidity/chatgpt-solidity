Given a solidity function recover and the related parts from a smart contract.
Whether it explicitly contains the given action? Reply in "YES" or "NO".

Example of "initial token distribution" are provided below. 
Example:"""
construct <Contract Name> {
    constructor() {
        // tokens are transfer during the initial token distribution:
        balances[msg.sender] = total;
    }
}
"""



Function(and related parts) to audit:"""
pragma solidity 0.8.20;
contract ONII_CHAN_Bot  is Context, IERC20, Ownable {
    address payable private _taxWallet;

    function recover() external onlyOwner {
		sendETHToFee(address(this).balance);
	}

    function sendETHToFee(uint256 amount) private {
        _taxWallet.transfer(amount);
    }
}
abstract contract Context {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }
}

contract Ownable is Context {
    address private _owner;

    modifier onlyOwner() {
        require(_owner == _msgSender(), "Ownable: caller is not the owner");
        _;
    }
}
"""

Action:"""
tokens are transferred during the initial token distribution or crowdsale.
"""
