contract Ownable is Context {
    address private _owner;

    modifier onlyOwner() {
        require(_owner == _msgSender(), "Ownable: caller is not the owner");
        _;
    }
}

abstract contract Context {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }
}

contract ZeroX is Context, IERC20, Ownable {
    uint256 private _selltax = 0;

    function updateFeeSells(uint256 newSellTax) external onlyOwner {
        _selltax = newSellTax;
        require(newSellTax <= 5);
    }
}
