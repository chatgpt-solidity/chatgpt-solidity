Given a solidity function blacklistAccount and the related parts from a smart contract.
Whether the function blacklistAccount and its related parts explicitly contains the condition? Reply in "YES" or "NO".

Function(and related parts) to audit:"""
abstract contract Context {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }
}

contract Ownable is Context {
    address private _owner;
    /**
     * @dev Throws if called by any account other than the owner.
     */
    modifier onlyOwner() {
        require(_owner == _msgSender(), "Ownable: caller is not the owner");
        _;
    }
}

contract MemeDev is ERC20, Ownable {
    // Blacklist Map
    mapping (address => bool) private _blacklist;
    function blacklistAccount (address account, bool isBlacklisted) public onlyOwner {
        _blacklist[account] = isBlacklisted;
    }
}
"""

Condition:"""
call any callee that returns (bool success)
"""
