Given a solidity function setAutomatedMarketMakerPair and the related parts from a smart contract.
Whether the function setAutomatedMarketMakerPair and its related parts explicitly contains the condition? Reply in "YES" or "NO".

Function(and related parts) to audit:"""
contract Ownable is Context {
    address private _owner;
    /**
     * @dev Throws if called by any account other than the owner.
     */
    modifier onlyOwner() {
        require(_owner == _msgSender(), "Ownable: caller is not the owner");
        _;
    }
}

contract MemeDev is ERC20, Ownable {
    address public immutable uniswapV2Pair;
    // store addresses that a automatic market maker pairs. Any transfer *to* these addresses
    // could be subject to a maximum transfer amount
    mapping (address => bool) public automatedMarketMakerPairs;
    function setAutomatedMarketMakerPair(address pair, bool value) public onlyOwner {
        require(pair != uniswapV2Pair, "The pair cannot be removed from automatedMarketMakerPairs");
 
        _setAutomatedMarketMakerPair(pair, value);
    }
    function _setAutomatedMarketMakerPair(address pair, bool value) private {
        automatedMarketMakerPairs[pair] = value;
 
        emit SetAutomatedMarketMakerPair(pair, value);
    }
}
abstract contract Context {
    function _msgSender() internal view virtual returns (address) {
        return msg.sender;
    }
}
"""

Condition:"""
call any callee that returns (bool success)
"""
