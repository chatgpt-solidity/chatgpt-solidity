Given a solidity function decreaseAllowance and the related parts from a smart contract.
Whether the function decreaseAllowance and its related parts explicitly contains the condition? Reply in "YES" or "NO".

Function(and related parts) to audit:"""
contract BREPE is IERC20, Ownable {
    mapping(address => mapping(address => uint256)) private _allowances;

    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));
        return true;
    }

    function _approve(address owner, address spender, uint256 amount) internal {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");

        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
}
library SafeMath {

    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        require(b <= a, "SafeMath: subtraction overflow");
        uint256 c = a - b;
        return c;
    }
}
"""

Condition:"""
call any callee that returns (bool success)
"""
