Given a solidity function transferFrom and the related parts from a smart contract and a rule.
Whether the function transferFrom and its related parts violate the rule? Reply in "YES" or "NO"

Function(and related parts) to audit:"""
library SafeMath {

    function sub(uint256 a, uint256 b) internal constant returns (uint256) {
        assert(b <= a);
        return a - b;

    }
    function add(uint256 a, uint256 b) internal constant returns (uint256) {
        uint256 c = a + b;
        assert(c >= a);
        return c;
    }
}

contract Projecton is owned, IERC20 {

    mapping(address => uint256) public balances;
    mapping(address => mapping(address => uint256)) allowed;

    function transferFrom(
        address _from,
        address _to,
        uint256 _value
    ) returns (bool success) {
        require(
            allowed[_from][msg.sender] >= _value &&
                balances[_from] >= _value &&
                _value > 0
        );
        balances[_from] = balances[_from].sub(_value);
        balances[_to] = balances[_to].add(_value);
        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
        Transfer(_from, _to, _value);
        return true;
    }
}
"""

Rule:"""
caller handles or directly returns the result of those calls if call any callee that returns (bool success)
"""
