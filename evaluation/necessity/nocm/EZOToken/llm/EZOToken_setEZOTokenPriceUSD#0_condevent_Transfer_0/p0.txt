Given a solidity function setEZOTokenPriceUSD and the related parts from a smart contract.
Whether the function setEZOTokenPriceUSD and the related parts violate the rule? Replay in "YES" or "NO".
Notes: Before Solidity version 0.5, events are emitting without "emit" keyword.

Example of "initial token distribution" are provided below. 
Example:"""
construct <Contract Name> {
    constructor() {
        // tokens are transfer during the initial token distribution:
        balances[msg.sender] = total;
    }
}
"""



Function(and related parts) to audit:"""
pragma solidity 0.5.9;
contract EZOToken is ERC20, SafeMath, Haltable {

    uint256 public ezoTokenPriceUSD = 100;

    //Owner can Set EZO token price
    //@ param _ezoTokenPriceUSD Current price EZO token.
    function setEZOTokenPriceUSD(uint256 _ezoTokenPriceUSD) public onlyOwner {
        require(_ezoTokenPriceUSD != 0);
        ezoTokenPriceUSD = _ezoTokenPriceUSD;
    }
}

contract Ownable {
    address public owner;

    /**
     * @dev Throws if called by any account other than the owner.
     */
    modifier onlyOwner() {
        require(msg.sender == owner);
        _;
    }
}
"""

Rule:"""
Emit Transfer if tokens are transferred during the initial token distribution or crowdsale.
"""
