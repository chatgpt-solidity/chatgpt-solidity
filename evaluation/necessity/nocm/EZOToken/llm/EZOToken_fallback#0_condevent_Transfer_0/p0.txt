Given a solidity function fallback and the related parts from a smart contract.
Whether the function fallback and the related parts violate the rule? Replay in "YES" or "NO".
Notes: Before Solidity version 0.5, events are emitting without "emit" keyword.

Example of "initial token distribution" are provided below. 
Example:"""
construct <Contract Name> {
    constructor() {
        // tokens are transfer during the initial token distribution:
        balances[msg.sender] = total;
    }
}
"""



Function(and related parts) to audit:"""
pragma solidity 0.5.9;
contract EZOToken is ERC20, SafeMath, Haltable {

    mapping(address => PurchaseRecord) PurchaseRecordsAll;
    mapping(address => uint256) transactionStatus;

    function() external payable {
        PurchaseData pd = new PurchaseData(msg.value, msg.sender);
        PurchaseRecord storage record = PurchaseRecordsAll[address(pd)];
        record.sender = msg.sender;
        record.amountSpent = msg.value;
        record.currency = address(0);
        transactionStatus[address(pd)] = 1;
        emit sendETHForEZO(address(pd), msg.sender, msg.value);
    }
}
"""

Rule:"""
Emit Transfer if tokens are transferred during the initial token distribution or crowdsale.
"""
