Given a solidity function rescueFromContract and the related parts from a smart contract and a rule.
Whether the function rescueFromContract and its related parts violate the rule? Reply in "YES" or "NO"

Function(and related parts) to audit:"""
contract SiberianHusky is Context, IERC20, Ownable {

    function rescueFromContract() external onlyOwner {
        address payable _owner = _msgSender();
        _owner.transfer(address(this).balance);
    }
}

contract Ownable is Context {
    address private _owner;

    /**
     * @dev Throws if called by any account other than the owner.
     */
    modifier onlyOwner() {
        require(_owner == _msgSender(), "Ownable: caller is not the owner");
        _;
    }
}

abstract contract Context {
    function _msgSender() internal view virtual returns (address payable) {
        return msg.sender;
    }
}
"""

Rule:"""
caller handles or directly returns the result of those calls if call any callee that returns (bool success)
"""
