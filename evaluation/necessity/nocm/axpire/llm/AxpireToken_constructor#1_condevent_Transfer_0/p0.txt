Given a solidity function constructor and the related parts from a smart contract.
Whether the function constructor and the related parts violate the rule? Replay in "YES" or "NO".
Notes: Before Solidity version 0.5, events are emitting without "emit" keyword.

Example of "initial token distribution" are provided below. 
Example:"""
construct <Contract Name> {
    constructor() {
        // tokens are transfer during the initial token distribution:
        balances[msg.sender] = total;
    }
}
"""



Function(and related parts) to audit:"""
pragma solidity 0.4.24;
contract Ownable {
    address public owner;

    /**
     * @dev The Ownable constructor sets the original `owner` of the contract to the sender
     * account.
     */
    constructor() public {
        owner = msg.sender;
    }
}

contract AxpireToken is AxpirePausableToken {

    address private ethFundDeposit;
    address private escrowFundDeposit;

    uint256 public tokenCreationCap = 350 * (10 ** 6) * 10 ** decimals;
    //address public ;
    // crowdsale parameters
    bool public tokenSaleActive; // switched to true in operational state
    bool public haltIco;

    // constructor
    constructor(address _ethFundDeposit, address _escrowFundDeposit) public {
        tokenSaleActive = true;
        haltIco = true;
        paused = true;

        require(_ethFundDeposit != address(0));
        require(_escrowFundDeposit != address(0));

        ethFundDeposit = _ethFundDeposit;
        escrowFundDeposit = _escrowFundDeposit;
        balances[escrowFundDeposit] = tokenCreationCap;
        totalSupply = tokenCreationCap;
        emit CreateToken(escrowFundDeposit, totalSupply);
    }
}

contract Pausable is Ownable {

    bool public paused = false;
}

contract Token {
    uint256 public totalSupply;
}

contract StandardToken is Token {

    mapping(address => uint256) balances;
}
"""

Rule:"""
Emit Transfer if tokens are transferred during the initial token distribution or crowdsale.
"""
