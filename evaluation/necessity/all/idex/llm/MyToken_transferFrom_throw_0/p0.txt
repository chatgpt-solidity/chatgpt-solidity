Given a solidity function transferFrom and the related parts from a smart contract.
Whether the function transferFrom throws unless the _from account has deliberately authorized the sender of the message via some mechanism? Reply in "YES" or "NO"
Note: returning false is not throwing.

Example of authorization mechanism:
Example:"""
contract {
    function transferFrom(address sender, address recipient, uint256 amount) {
        transfer(...);
        _allowances[sender][msg.sender] -= amount;
        // omit other codes
    }
}
"""



Function(and related parts) to audit:"""
contract MyToken {

    /* This creates an array with all balances */
    mapping(address => uint256) public balanceOf;
    mapping(address => mapping(address => uint256)) public allowance;

    /* A contract attempts to get the coins */
    function transferFrom(
        address _from,
        address _to,
        uint256 _value
    ) returns (bool success) {
        if (balanceOf[_from] < _value) throw; // Check if the sender has enough
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
        if (_value > allowance[_from][msg.sender]) throw; // Check allowance
        balanceOf[_from] -= _value; // Subtract from the sender
        balanceOf[_to] += _value; // Add the same to the recipient
        allowance[_from][msg.sender] -= _value;
        Transfer(_from, _to, _value);
        return true;
    }
}
"""
