Given a solidity function approveAndCall and the related parts from a smart contract.
Whether it explicitly contains the given action? Reply in "YES" or "NO".

Example of "initial token distribution" are provided below. 
Example:"""
construct <Contract Name> {
    constructor() {
        // tokens are transfer during the initial token distribution:
        balances[msg.sender] = total;
    }
}
"""



Function(and related parts) to audit:"""
pragma solidity 0.4.17;
contract BITCOINSVGOLD is StandardToken {

    /* Approves and then calls the receiving contract */
    function approveAndCall(
        address _spender,
        uint256 _value,
        bytes _extraData
    ) returns (bool success) {
        allowed[msg.sender][_spender] = _value;
        Approval(msg.sender, _spender, _value);

        //call the receiveApproval function on the contract you want to be notified. This crafts the function signature manually so one doesn't have to include a contract in here just for this.
        //receiveApproval(address _from, uint256 _value, address _tokenContract, bytes _extraData)
        //it is assumed that when does this that the call *should* succeed, otherwise one would use vanilla approve instead.
        if (
            !_spender.call(
                bytes4(
                    bytes32(
                        sha3("receiveApproval(address,uint256,address,bytes)")
                    )
                ),
                msg.sender,
                _value,
                this,
                _extraData
            )
        ) {
            throw;
        }
        return true;
    }
}

contract StandardToken is Token {
    mapping(address => mapping(address => uint256)) allowed;
}
"""

Action:"""
tokens are transferred during the initial token distribution or crowdsale.
"""
