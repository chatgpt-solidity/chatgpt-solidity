Given a solidity function burn and the related parts from a smart contract.
Whether it explicitly contains the given action? Reply in "YES" or "NO".



Function(and related parts) to audit:"""
pragma solidity 0.5.9;
contract Haltable is Ownable {
    // @dev To Halt in Emergency Condition
    bool public halted = false;

    // @dev Use this as function modifier that should not execute if contract state Halted
    modifier stopIfHalted() {
        require(!halted);
        _;
    }
}

contract SafeMath {

    function safeSub(uint256 a, uint256 b) internal pure returns (uint256) {
        assert(b <= a);
        return a - b;
    }
}

contract EZOToken is ERC20, SafeMath, Haltable {

    //mapping of token balances
    mapping(address => uint256) balances;
    mapping(address => bool) public allowedAddresses;

    // Function will create new tokens and assign to investor's address
    function burn(
        address from,
        uint256 tokens
    ) public stopIfHalted returns (bool) {
        require(allowedAddresses[msg.sender]);
        require(balances[from] > tokens);
        totalSupply = safeSub(totalSupply, tokens);
        balances[from] = safeSub(balances[from], tokens);
        emit Burn(from, tokens);
        emit Transfer(from, address(0), tokens);
        return true;
    }
}

contract ERC20 {
    uint public totalSupply;
}
"""

Action:"""
tokens are burning or deallocating
"""
