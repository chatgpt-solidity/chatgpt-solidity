Given a solidity function stop and the related parts from a smart contract.
Whether the function stop and its related parts explicitly contains the condition? Reply in "YES" or "NO".

Function(and related parts) to audit:"""
contract DSNote {

    modifier note() {
        bytes32 foo;
        bytes32 bar;

        assembly {
            foo := calldataload(4)
            bar := calldataload(36)
        }

        LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data);

        _;
    }
}

contract DSStop is DSNote, DSAuth {
    bool public stopped;

    function stop() public auth note {
        stopped = true;
    }
}

contract DSAuth is DSAuthEvents {
    DSAuthority public authority;
    address public owner;

    modifier auth() {
        require(isAuthorized(msg.sender, msg.sig));
        _;

    }
    function isAuthorized(
        address src,
        bytes4 sig
    ) internal view returns (bool) {
        if (src == address(this)) {
            return true;
        } else if (src == owner) {
            return true;
        } else if (authority == DSAuthority(0)) {
            return false;
        } else {
            return authority.canCall(src, this, sig);
        }
    }
}
"""

Condition:"""
call any callee that returns (bool success)
"""
