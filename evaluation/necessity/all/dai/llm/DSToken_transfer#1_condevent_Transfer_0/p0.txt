Given a solidity function transfer and the related parts from a smart contract.
Whether it explicitly contains the given action? Reply in "YES" or "NO".

Example of "initial token distribution" are provided below. 
Example:"""
construct <Contract Name> {
    constructor() {
        // tokens are transfer during the initial token distribution:
        balances[msg.sender] = total;
    }
}
"""



Function(and related parts) to audit:"""
pragma solidity 0.4.17;
contract DSMath {
    function add(uint x, uint y) internal pure returns (uint z) {
        require((z = x + y) >= x);
    }

    function sub(uint x, uint y) internal pure returns (uint z) {
        require((z = x - y) <= x);
    }
}

contract DSTokenBase is ERC20, DSMath {
    mapping(address => uint256) _balances;
    mapping(address => mapping(address => uint256)) _approvals;

    function transfer(address dst, uint wad) public returns (bool) {
        return transferFrom(msg.sender, dst, wad);
    }
}

contract DSToken is DSTokenBase(0), DSStop {

    function transferFrom(
        address src,
        address dst,
        uint wad
    ) public stoppable returns (bool) {
        if (src != msg.sender && _approvals[src][msg.sender] != uint(-1)) {
            _approvals[src][msg.sender] = sub(_approvals[src][msg.sender], wad);
        }

        _balances[src] = sub(_balances[src], wad);
        _balances[dst] = add(_balances[dst], wad);

        Transfer(src, dst, wad);

        return true;
    }
}

contract DSStop is DSNote, DSAuth {

    bool public stopped;
    modifier stoppable() {
        require(!stopped);
        _;
    }
}
"""

Action:"""
tokens are transferred during the initial token distribution or crowdsale.
"""
