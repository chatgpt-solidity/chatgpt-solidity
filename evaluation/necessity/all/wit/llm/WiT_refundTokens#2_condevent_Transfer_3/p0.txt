Given a solidity function refundTokens and the related parts from a smart contract.
Whether it explicitly contains the given action? Reply in "YES" or "NO".



Function(and related parts) to audit:"""
pragma solidity 0.5.3;
contract WiT is AbstractToken {

    /**
     * Address of the owner of this smart contract.
     */
    address private owner;

    /*A user is able to unintentionally send tokens to a contract
     * and if the contract is not prepared to refund them they will get stuck in the contract.
     * The same issue used to happen for Ether too but new Solidity versions added the payable modifier to
     * prevent unintended Ether transfers. However, thereâ€™s no such mechanism for token transfers.
     * so the below function is created
     */

    function refundTokens(
        address _token,
        address _refund,
        uint256 _value
    ) public {
        require(msg.sender == owner);
        require(_token != address(this));
        AbstractToken token = AbstractToken(_token);
        token.transfer(_refund, _value);
        emit RefundTokens(_token, _refund, _value);
    }
}
"""

Action:"""
tokens are burning or deallocating
"""
