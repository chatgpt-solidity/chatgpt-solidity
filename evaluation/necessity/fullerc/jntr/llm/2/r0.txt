The provided Solidity function `setAccount` and the related parts of the contract do not directly violate the ERC-20 standard as described in the provided ERC documentation. However, there are a few points to consider:

1. The ERC-20 standard specifies a set of functions and events that a compliant token must implement. The `setAccount` function is not part of the ERC-20 standard, so it does not violate the standard by its existence. It appears to be a custom function specific to the `JNTR` contract.

2. The ERC-20 standard does not dictate how the internal mechanisms of a token contract should manage accounts or balances, as long as the standard's external interface and behavior are followed. This means that as long as the `JNTR` contract correctly implements the ERC-20 functions (`totalSupply`, `balanceOf`, `transfer`, `transferFrom`, `approve`, `allowance`) and events (`Transfer`, `Approval`), it can have additional functions and state variables for its own purposes.

3. The `setAccount` function is setting up an account with an initial balance of 0 and marking it as active. This does not inherently conflict with ERC-20, but it is important to ensure that any additional functionality does not interfere with the expected behavior of the ERC-20 functions. For example, if `setAccount` somehow prevented the `transfer` or `transferFrom` functions from working correctly, then it would be violating the standard.

4. The `setAccount` function has a `require` statement that checks if the sender is the owner of the contract. This is a form of access control and is not covered by the ERC-20 standard. Access control mechanisms are often used in token contracts for administrative purposes, but they must be carefully managed to avoid centralization and security issues.

5. The `setAccount` function does not emit any events. This is not a violation of the ERC-20 standard, as the standard only requires the `Transfer` and `Approval` events to be emitted in specific circumstances related to token transfers and approvals.

In conclusion, the `setAccount` function does not violate the ERC-20 standard as long as the rest of the contract correctly implements the required ERC-20 functions and events and as long as the additional functionality does not interfere with the standard behavior of ERC-20 tokens. It is important to review the entire contract to ensure full compliance with the standard and to assess any potential security implications of the custom functionality.