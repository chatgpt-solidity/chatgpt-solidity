The provided Solidity code defines a function `changeAdminAddress` within a contract named `KIMEX`, which inherits from another contract named `Owner`. The `changeAdminAddress` function is designed to allow the owner of the contract to change the `adminAddress` state variable.

The provided ERC (Ethereum Request for Comment) appears to be a description of the ERC-20 standard, which is a standard interface for fungible tokens on the Ethereum blockchain. The ERC-20 standard specifies a set of functions and events that a compliant token contract must implement to enable interoperability with other contracts, wallets, and decentralized applications.

The ERC-20 standard includes functions such as `name`, `symbol`, `decimals`, `totalSupply`, `balanceOf`, `transfer`, `transferFrom`, `approve`, and `allowance`, as well as events like `Transfer` and `Approval`.

The `changeAdminAddress` function in the `KIMEX` contract is not part of the ERC-20 standard. It is a custom administrative function that is specific to the `KIMEX` contract's implementation. This function does not interact with the token's balance, supply, or transfer mechanisms, and it does not affect the compliance of the `KIMEX` contract with the ERC-20 standard.

Therefore, the `changeAdminAddress` function and the related parts do not violate the given ERC-20 standard, as the standard does not dictate administrative controls or ownership management within a token contract. The ERC-20 standard is solely concerned with the token-related functionality and does not cover administrative functions like changing an admin address.

However, it is important to note that while the `changeAdminAddress` function does not violate the ERC-20 standard, it is crucial to ensure that such administrative functions are secure and do not introduce vulnerabilities that could be exploited. The use of the `onlyOwner` modifier in this function is a common pattern to restrict access to sensitive functions to the owner of the contract, which is a good security practice.