The provided Solidity code for the `endICO` function and related parts of the `KIMEX` contract do not directly interact with any ERC-20 token standard functions such as `transfer`, `approve`, `allowance`, etc. Instead, the code seems to be part of a contract that manages an Initial Coin Offering (ICO) process.

The ERC-20 standard, as described in the provided ERC excerpt, specifies a standard interface for tokens on the Ethereum blockchain. It defines a set of methods and events that a compliant token contract must implement to enable interoperability with other contracts, wallets, and decentralized applications.

The `endICO` function in the `KIMEX` contract appears to be an administrative function that is used to end the ICO process. It sets the `saleState` to `END_SALE`, stops the selling process by setting `isSelling` to `false`, and records the `icoEndTime`. It also emits an `EndICO` event, which is not part of the ERC-20 standard but is specific to this contract's implementation.

Since the `endICO` function and related parts of the contract do not implement or interact with any of the ERC-20 token standard functions, they do not violate the ERC-20 standard. However, it is important to note that the `KIMEX` contract should also implement all the required ERC-20 functions and events if it intends to issue an ERC-20 compliant token as part of its ICO. The provided code snippet does not include any of the ERC-20 functions, so it is not possible to determine from this snippet alone whether the `KIMEX` contract is ERC-20 compliant.

To fully assess ERC-20 compliance, one would need to review the entire contract code to ensure that all required functions and events are correctly implemented and that the contract adheres to the behavior specified in the ERC-20 standard.