The provided Solidity function interfaces appear to be for an ERC-20 token, which is a standard interface for fungible tokens on the Ethereum blockchain. The ERC-20 standard specifies a set of functions and events that a compliant token contract must implement.

Let's compare the provided function interfaces with the ERC-20 standard:

1. `transferFrom(address,address,uint256) returns(bool)` - This matches the ERC-20 `transferFrom` function specification.

2. `transfer(address,uint256) returns(bool)` - This matches the ERC-20 `transfer` function specification.

3. `balanceOf(address) returns(uint256)` - This matches the ERC-20 `balanceOf` function specification.

4. `approve(address,uint256) returns(bool)` - This matches the ERC-20 `approve` function specification.

5. `allowance(address,address) returns(uint256)` - This matches the ERC-20 `allowance` function specification.

6. `totalSupply() returns(uint256)` - This matches the ERC-20 `totalSupply` function specification. However, it is listed twice in the provided interfaces, which is redundant and should be corrected.

7. `IOSToken() returns()` - This function is not part of the ERC-20 standard and seems to be specific to the implementation of this particular token. It does not violate the ERC-20 standard, but it is not required by it.

8. `symbol() returns(string)` - This matches the ERC-20 `symbol` function specification.

9. `name() returns(string)` - This matches the ERC-20 `name` function specification.

10. `decimals() returns(uint8)` - This matches the ERC-20 `decimals` function specification.

The provided function interfaces include all the required functions of the ERC-20 standard. However, there are a couple of issues:

- The `totalSupply` function is listed twice, which is unnecessary and should be fixed.
- The `IOSToken` function is not part of the ERC-20 standard, but including it does not violate the standard as long as it does not interfere with the required functions.

Additionally, the ERC-20 standard requires two events to be implemented:

- `event Transfer(address indexed _from, address indexed _to, uint256 _value)`
- `event Approval(address indexed _owner, address indexed _spender, uint256 _value)`

These events are not listed in the provided interfaces, but they are essential for ERC-20 compliance. The smart contract must include these events to be fully compliant with the ERC-20 standard.

In conclusion, the provided function interfaces do not violate the ERC-20 standard, but the contract must also include the required `Transfer` and `Approval` events, and the duplicate `totalSupply` function should be removed for clarity.