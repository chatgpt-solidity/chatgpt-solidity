The provided Solidity code defines a contract `DSAuth` that implements an authorization system, which is not directly related to the ERC-20 token standard. The ERC-20 standard specifies a set of functions and events that a compliant token contract must implement to enable the transfer and management of token balances. The functions include `transfer`, `transferFrom`, `approve`, `allowance`, `balanceOf`, and `totalSupply`, as well as the events `Transfer` and `Approval`.

The `setAuthority` function in the `DSAuth` contract is used to set an authority that can determine whether a particular address has the permission to call certain functions. This is part of an access control mechanism and is not specified in the ERC-20 standard. The ERC-20 standard does not require or specify any particular access control mechanisms for administrative operations.

Therefore, the `setAuthority` function and the related parts of the `DSAuth` contract do not violate the ERC-20 standard because they are not related to the token transfer and management functionalities that the ERC-20 standard defines. The `DSAuth` contract appears to be a separate access control contract that could be used in conjunction with an ERC-20 token contract, but it does not modify or interfere with the ERC-20 token functionalities.

It's important to note that the ERC-20 standard is focused on token behavior and does not restrict the implementation of additional features such as access control, as long as the core ERC-20 functions and events are correctly implemented and behave as specified by the standard.