Based on the provided Solidity code and the ERC (which appears to be a description of the ERC-20 token standard), we can analyze whether the `HBToken` contract complies with the ERC-20 standard.

The ERC-20 standard specifies a set of functions and events that a compliant token contract must implement. The provided `HBToken` contract code snippet does not show the full implementation, but we can comment on what is provided:

1. `totalSupply`: The ERC-20 standard requires a `totalSupply` function that returns the total token supply. The `HBToken` contract has a public state variable `totalSupply`, which is automatically given a getter function by Solidity, so this part complies with the standard.

2. `Transfer` event: The ERC-20 standard requires a `Transfer` event to be emitted when tokens are transferred, including zero value transfers. The `HBToken` constructor emits a `Transfer` event when the initial supply is assigned to the creator of the contract, which is compliant with the standard.

3. `balanceOf`: The ERC-20 standard requires a `balanceOf` function that returns the account balance of another account with address `_owner`. The `RegularToken` contract has a `balances` mapping, but the provided code snippet does not show a `balanceOf` function. To be compliant, the `HBToken` contract must implement this function.

4. `transfer`, `transferFrom`, `approve`, `allowance`: The ERC-20 standard requires these functions to be implemented. The provided code snippet does not show these functions, so we cannot determine compliance based on the given information.

5. `Approval` event: The ERC-20 standard requires an `Approval` event to be emitted on any successful call to `approve`. The provided code snippet does not show this, so we cannot determine compliance based on the given information.

6. Return values: The ERC-20 standard specifies that functions like `transfer`, `transferFrom`, and `approve` must return a boolean value indicating success. The provided code snippet does not show the implementation of these functions, so we cannot determine compliance based on the given information.

7. `name`, `symbol`, `decimals`: These are optional functions in the ERC-20 standard that provide information about the token. The provided code snippet does not include these functions, but their absence does not violate the standard as they are not mandatory.

In conclusion, based on the provided code snippet, we cannot fully determine whether the `HBToken` contract is ERC-20 compliant because the implementation of several required functions and events is not shown. To fully assess compliance, the complete contract code, including the implementation of `transfer`, `transferFrom`, `approve`, `allowance`, and the `Approval` event, would need to be reviewed.