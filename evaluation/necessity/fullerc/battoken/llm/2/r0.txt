The provided Solidity code for the `balanceOf` function appears to be compliant with the ERC-20 token standard as described in the given ERC documentation. The ERC-20 standard specifies that the `balanceOf` function should:

- Accept an address `_owner` as a parameter.
- Return the balance of the `_owner` address.

The provided Solidity code for the `balanceOf` function does exactly that:

```solidity
function balanceOf(address _owner) constant returns (uint256 balance) {
    return balances[_owner];
}
```

It takes an address `_owner` and returns the balance associated with that address from the `balances` mapping. The `constant` keyword in Solidity 0.4.x is equivalent to `view` in later versions, indicating that the function does not modify the state and can be called externally to view data without incurring gas costs.

However, there are a couple of points to note:

1. The `constant` keyword has been deprecated in favor of `view` and `pure` in later versions of Solidity. If the contract is written in Solidity 0.4.17 or above, as mentioned in the ERC, it would be more appropriate to use `view` instead of `constant`.

2. The ERC-20 standard requires that the `balanceOf` function be marked as `public` and `view`. The provided code does not explicitly specify the visibility of the function, which by default is `public` in Solidity, but it is considered good practice to explicitly state the visibility for clarity.

3. The ERC-20 standard does not require the `balanceOf` function to return a success flag (bool success), so the provided function signature is correct in that regard.

4. The ERC documentation provided does not include the full ERC-20 standard, which also includes other functions and events that must be implemented for full compliance. To fully assess compliance, one would need to review the entire contract code to ensure all required functions and events are correctly implemented.

In conclusion, the provided `balanceOf` function code does not violate the ERC-20 standard based on the information given. However, it is recommended to update the `constant` keyword to `view` and explicitly declare the function as `public` for better compliance with the latest Solidity practices and clarity of the code.