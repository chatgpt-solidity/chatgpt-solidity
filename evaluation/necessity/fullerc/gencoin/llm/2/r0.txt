The provided Solidity code for the `balanceOf` function appears to be compliant with the ERC-20 token standard as described in the given ERC documentation. The ERC-20 standard specifies that the `balanceOf` function should:

- Accept an address `_owner` as a parameter.
- Return the balance of the `_owner` address.

The provided Solidity code for the `balanceOf` function does exactly that:

```solidity
function balanceOf(address _owner) constant returns (uint256 balance) {
    return balances[_owner];
}
```

It takes an address `_owner` and returns the balance associated with that address from the `balances` mapping.

However, there are a few points to note:

1. The `constant` keyword is used in the provided code, which is an older Solidity convention. In more recent versions of Solidity (0.4.17 and above), the `view` or `pure` keyword should be used instead to indicate that the function does not modify the state. The `constant` keyword is deprecated but should still work in older Solidity versions.

2. The ERC-20 standard specifies that the `balanceOf` function should be marked as `public` and `view`. The provided code does not explicitly specify the visibility of the function, which by default is `public` in Solidity, but it should also include the `view` keyword to be fully compliant with the latest best practices.

3. The ERC-20 standard does not require the `balanceOf` function to return a success flag (bool success), so the provided code is correct in this regard.

4. The ERC-20 standard does not specify the use of events in the `balanceOf` function, so the absence of events in the provided code is compliant.

To improve the provided code and ensure it is up to date with the latest Solidity standards, you could update the function as follows:

```solidity
function balanceOf(address _owner) public view returns (uint256 balance) {
    return balances[_owner];
}
```

This change includes the `public` and `view` keywords to explicitly state the visibility and behavior of the function.

In conclusion, the provided `balanceOf` function does not violate the ERC-20 standard, but it could be updated to reflect the latest Solidity conventions and best practices.