The provided Solidity event interfaces:

```solidity
event Transfer(address indexed, address indexed, uint256);
event Approval(address indexed, address indexed, uint256);
```

These events are part of the ERC-20 token standard, which is the standard interface for tokens as described in the provided ERC (Ethereum Request for Comments) document. The ERC-20 standard specifies two events:

1. `Transfer`: This event must be triggered when tokens are transferred, including zero value transfers.
2. `Approval`: This event must be triggered on any successful call to the `approve` function.

The provided event interfaces match the ERC-20 standard's event signatures:

- `Transfer` event with parameters `(address indexed _from, address indexed _to, uint256 _value)`.
- `Approval` event with parameters `(address indexed _owner, address indexed _spender, uint256 _value)`.

However, the parameter names are missing in the provided code snippet. While Solidity does not enforce parameter names for events and they do not affect the ABI, it is a good practice to include them for readability and clarity. The correct event interfaces according to the ERC-20 standard should include parameter names:

```solidity
event Transfer(address indexed _from, address indexed _to, uint256 _value);
event Approval(address indexed _owner, address indexed _spender, uint256 _value);
```

In conclusion, the provided event interfaces do not violate the ERC-20 standard, but they should include parameter names to match the standard's specification and improve clarity.