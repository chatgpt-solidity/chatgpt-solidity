contract SilkToken is owned, TokenERC20 {

    /* Initializes contract with initial supply tokens to the creator of the contract */
    function SilkToken(
        uint256 initialSupply,
        string tokenName,
        string tokenSymbol
    ) public TokenERC20(initialSupply, tokenName, tokenSymbol) {}
}

contract owned {
    address public owner;

    function owned() public {
        owner = msg.sender;
    }
}

contract TokenERC20 {
    // Public variables of the token
    string public name;

    // This creates an array with all balances
    mapping(address => uint256) public balanceOf;
    // 18 decimals is the strongly suggested default, avoid changing it
    uint256 public totalSupply;
    uint8 public decimals = 18;
    string public symbol;

    /**
     * Constructor function
     *
     * Initializes contract with initial supply tokens to the creator of the contract
     */
    function TokenERC20(
        uint256 initialSupply,
        string tokenName,
        string tokenSymbol
    ) public {
        totalSupply = initialSupply * 10 ** uint256(decimals); // Update total supply with the decimal amount -- wei
        balanceOf[msg.sender] = totalSupply; // Give the creator all initial tokens
        name = tokenName; // Set the name for display purposes
        symbol = tokenSymbol; // Set the symbol for display purposes
    }
}

