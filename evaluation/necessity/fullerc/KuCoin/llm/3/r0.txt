The provided Solidity function interfaces are being compared to the ERC-20 token standard, which is the most common standard for Ethereum tokens. The ERC-20 standard specifies a set of functions and events that a compliant token contract must implement.

Let's compare the provided interfaces with the ERC-20 standard:

1. `MyToken(uint256,string,uint8,string) returns()` - This appears to be a constructor or an initialization function, which is not part of the ERC-20 standard. Constructors are not part of the interface, so this is not a violation.

2. `transfer(address,uint256) returns()` - The ERC-20 standard specifies that the `transfer` function should return a boolean value indicating success. The provided interface does not return a boolean, which is a violation of the standard.

3. `burn(uint256) returns(bool)` - The `burn` function is not part of the ERC-20 standard. However, including additional functions beyond the standard does not violate the ERC-20 standard itself, as long as the required functions are correctly implemented.

4. `name() returns(string)` - The ERC-20 standard specifies this function as optional and it should return a string. This matches the standard.

5. `balanceOf(address) returns(uint256)` - This matches the ERC-20 standard.

6. `decimals() returns(uint8)` - This matches the ERC-20 standard.

7. `symbol() returns(string)` - This matches the ERC-20 standard.

8. `allowance(address,address) returns(uint256)` - This matches the ERC-20 standard.

9. `totalSupply() returns(uint256)` - This matches the ERC-20 standard.

Missing from the provided interfaces are:

- `transferFrom(address,address,uint256) returns(bool)` - This function is required by the ERC-20 standard and is missing from the provided interfaces.
- `approve(address,uint256) returns(bool)` - This function is also required by the ERC-20 standard and is missing from the provided interfaces.

Events:
- The `Transfer` and `Approval` events are not listed in the provided interfaces, but they are required by the ERC-20 standard. The contract must emit these events accordingly.

In summary, the provided Solidity function interfaces violate the ERC-20 standard in the following ways:

- The `transfer` function does not return a boolean value.
- The `transferFrom` and `approve` functions are missing.
- The `Transfer` and `Approval` events are not specified (though they could be implemented in the contract without being listed in the provided interfaces).

To be fully compliant with the ERC-20 standard, the contract would need to adjust the `transfer` function to return a boolean and implement the `transferFrom`, `approve`, and the required `Transfer` and `Approval` events.