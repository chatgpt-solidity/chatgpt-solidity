The provided Solidity code defines a contract `Ownable` with a function `transferOwnership` that allows the current owner of the contract to transfer ownership to a new address. This function is not part of the ERC-20 token standard, which is the standard described in the provided ERC excerpt.

The ERC-20 standard focuses on the implementation of a token interface, including functions for transferring tokens, checking balances, and allowing tokens to be spent by approved third parties. The standard includes the following functions and events:

- `name()`
- `symbol()`
- `decimals()`
- `totalSupply()`
- `balanceOf(address _owner)`
- `transfer(address _to, uint256 _value)`
- `transferFrom(address _from, address _to, uint256 _value)`
- `approve(address _spender, uint256 _value)`
- `allowance(address _owner, address _spender)`
- `Transfer` event
- `Approval` event

The `transferOwnership` function in the `Ownable` contract is a common pattern used in many smart contracts to manage ownership and administrative privileges, but it is not specified in the ERC-20 standard. Therefore, the `transferOwnership` function does not violate the ERC-20 standard because the standard does not concern itself with contract ownership or administrative functions.

It is important to note that the `Ownable` contract is often used in conjunction with ERC-20 contracts to provide administrative control over certain aspects of the token contract, such as minting new tokens or pausing transfers. However, these administrative functions are separate from the ERC-20 token standard itself and are typically included in extended token contracts that offer additional features beyond the basic ERC-20 standard.

In conclusion, the `transferOwnership` function and related parts do not violate the ERC-20 standard, as they are not part of the standard's specification. The function is part of a separate concern regarding contract ownership and administration.