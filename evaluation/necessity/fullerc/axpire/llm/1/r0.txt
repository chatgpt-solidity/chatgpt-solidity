The provided Solidity code for the `transferFrom` function and related parts of the smart contract do not appear to violate the ERC-20 standard as described in the given ERC documentation. Here's why:

1. The `transferFrom` function in the `StandardToken` contract checks that the `_from` address has enough balance (`balances[_from] >= _value`), the message sender is allowed to transfer the specified amount (`allowed[_from][msg.sender] >= _value`), and the value to be transferred is greater than 0 (`_value > 0`). If these conditions are met, the function performs the transfer, updates the balances, reduces the allowance, and emits the `Transfer` event. This behavior is in line with the ERC-20 specification.

2. The `AxpirePausableToken` contract inherits from `StandardToken` and overrides the `transferFrom` function to add the `whenNotPaused` modifier. This modifier ensures that the `transferFrom` function can only be called when the contract is not paused. This additional feature does not violate the ERC-20 standard, as the standard does not specify whether a token should be pausable or not. It is a common practice to include such security features in token contracts.

3. The ERC-20 standard requires that the `transferFrom` function should return a boolean value indicating success or failure. Both `transferFrom` functions in the provided code return a boolean value as required.

4. The ERC-20 standard requires that the `Transfer` event must be triggered when tokens are transferred, including zero value transfers. The provided `transferFrom` function in the `StandardToken` contract correctly emits the `Transfer` event.

5. The ERC-20 standard specifies that the `transferFrom` function should throw an error if the transfer is not possible (e.g., due to insufficient balance or allowance). In the provided code, instead of throwing an error, the function returns `false` if the conditions are not met. This is acceptable as per the ERC-20 standard, which states that callers must handle `false` from returns and must not assume that `false` is never returned.

In conclusion, the provided `transferFrom` function and related parts of the smart contract adhere to the ERC-20 standard. The addition of the pausing functionality does not conflict with the standard's requirements and is a common practice for additional security and control over the token contract.