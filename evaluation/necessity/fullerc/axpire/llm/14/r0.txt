The provided Solidity code for the `sendFundHome` function and related parts of the `AxpireToken` contract do not directly interact with the ERC-20 token standard interface. The ERC-20 standard specifies a set of functions and events that a compliant token contract must implement to enable token transfers, allowances, and other related functionalities.

The `sendFundHome` function in the `AxpireToken` contract is designed to send the Ether balance of the contract to a predefined address (`ethFundDeposit`). This function does not deal with the token balance or token transfer functionality that is outlined in the ERC-20 standard. Instead, it is related to the contract's ability to handle Ether.

Here is a summary of the ERC-20 standard methods and events:

- `name()`
- `symbol()`
- `decimals()`
- `totalSupply()`
- `balanceOf(address _owner)`
- `transfer(address _to, uint256 _value)`
- `transferFrom(address _from, address _to, uint256 _value)`
- `approve(address _spender, uint256 _value)`
- `allowance(address _owner, address _spender)`
- `Transfer` event
- `Approval` event

The `sendFundHome` function does not interact with any of these methods or events. It is a separate functionality that is concerned with the management of Ether within the contract, not the ERC-20 token itself.

However, it is important to note that the `sendFundHome` function uses a direct `send` call to transfer Ether, which is considered a security risk because it forwards only a limited amount of gas and does not throw an exception if the call fails. A safer alternative is to use `transfer` or `call` with proper error handling. Additionally, the function does not emit any event to record the Ether transfer, which is a common best practice for transparency and tracking purposes, although this is not a requirement of the ERC-20 standard.

In conclusion, the `sendFundHome` function does not violate the ERC-20 standard, as it does not pertain to the token interface defined by the standard. However, it may have potential security risks and lack best practices for Ether management within a contract.