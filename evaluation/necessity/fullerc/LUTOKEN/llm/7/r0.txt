The `balanceOf` function provided in the `BasicToken` contract appears to be compliant with the ERC20 standard as described in the ERC excerpt you provided. The ERC20 standard specifies that the `balanceOf` function should:

- Accept an address `_owner` as a parameter.
- Return the account balance of the specified address as a `uint256`.

The `balanceOf` function in the `BasicToken` contract meets these requirements:

```solidity
function balanceOf(address _owner) public view returns (uint256) {
    return balances[_owner];
}
```

It takes an address `_owner` as an input and returns the balance associated with that address from the `balances` mapping, which is a `uint256`.

There are no additional constraints or requirements specified in the ERC excerpt for the `balanceOf` function that are not met by the provided function. Therefore, based on the information given, the `balanceOf` function does not violate the ERC20 standard.

However, it is important to note that the ERC20 standard also requires other functions and events to be implemented for full compliance, such as `transfer`, `approve`, `allowance`, `Transfer` event, and `Approval` event. The `BasicToken` contract would need to implement all of these to be considered fully ERC20 compliant. Since only the `balanceOf` function is provided, we cannot assess the full compliance of the `BasicToken` contract with the ERC20 standard without the rest of the code.