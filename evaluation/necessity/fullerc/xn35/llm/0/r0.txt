The provided Solidity code defines a simple `owned` contract with a function `transferOwnership` that allows the current owner to transfer ownership of the contract to a new owner. This is a common pattern in smart contract design to allow for administrative control over certain functions.

The ERC (Ethereum Request for Comment) provided appears to be describing the ERC-20 standard, which is a standard interface for fungible tokens on the Ethereum blockchain. The ERC-20 standard specifies a set of functions and events that a token contract should implement to enable interoperability with wallets, exchanges, and other contracts.

The `transferOwnership` function and the `owned` contract are not part of the ERC-20 standard. The ERC-20 standard focuses on token-related functionalities such as transferring tokens, approving tokens for third-party transfers, and querying token balances and allowances. It does not specify anything about ownership transfer of the contract itself.

Therefore, the `transferOwnership` function does not violate the ERC-20 standard because it is not related to the token functionalities that the standard defines. It is an additional feature that is often included in smart contracts for administrative purposes, allowing the owner to change the administrative account.

However, it is important to note that while the `transferOwnership` function does not violate the ERC-20 standard, it must be used with caution. The ability to transfer ownership of a contract can be a powerful and potentially dangerous tool if not properly secured. It should be protected by appropriate access control mechanisms, such as the `onlyOwner` modifier in the provided code, to prevent unauthorized use.