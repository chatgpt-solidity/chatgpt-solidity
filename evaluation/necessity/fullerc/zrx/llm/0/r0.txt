The provided `transferFrom` function in the `UnlimitedAllowanceToken` contract does not appear to violate the ERC-20 standard as described in the given ERC documentation. Here's a breakdown of the key points:

1. **Transfer of Tokens**: The `transferFrom` function is designed to transfer `_value` amount of tokens from the `_from` address to the `_to` address, which is in line with the ERC-20 standard.

2. **Allowance Mechanism**: The function checks the allowance set by the `_from` address for the `msg.sender` (the entity trying to transfer tokens on behalf of `_from`). This is also consistent with the ERC-20 standard, which requires that the `_from` account must have authorized the sender of the message via some mechanism.

3. **Unlimited Allowance**: The contract introduces a concept of "unlimited allowance" by using a special value `MAX_UINT` (2^256 - 1). If the allowance is set to this value, the contract treats it as an unlimited allowance and does not decrease the allowance when tokens are transferred. This is a custom implementation detail, but it does not inherently violate the ERC-20 standard as long as the standard functions behave correctly.

4. **Transfer Event**: The function emits a `Transfer` event upon a successful transfer, which is required by the ERC-20 standard.

5. **Return Value**: The function returns a boolean value indicating the success of the transfer, which is also required by the ERC-20 standard.

6. **Throwing on Failure**: The ERC-20 standard states that the function SHOULD throw if certain conditions are not met (e.g., insufficient balance or allowance). However, the provided function returns `false` instead of throwing an error. This is a deviation from the ERC-20 standard's recommendation, but the standard also notes that callers MUST handle `false` from returns. Therefore, while it's a deviation from the "SHOULD" recommendation, it's not a violation of the "MUST" requirements.

7. **Zero Value Transfers**: The ERC-20 standard specifies that transfers of 0 values MUST be treated as normal transfers and fire the `Transfer` event. The provided function does not explicitly handle the case of `_value` being 0, but since there are no checks preventing a transfer of 0, it would be processed like any other transfer and the `Transfer` event would be emitted, which is compliant with the standard.

In conclusion, the `transferFrom` function in the `UnlimitedAllowanceToken` contract adheres to the ERC-20 standard's required functionality. The introduction of an "unlimited allowance" concept is a custom feature that does not violate the standard, and the function properly handles allowances, transfers, and events as specified by the ERC. The only minor deviation is the use of `return false` instead of throwing an error, but this is accounted for in the standard's notes about handling return values.