The provided Solidity function interfaces are meant to represent an ERC-20 token contract, as the ERC provided is the ERC-20 standard for fungible tokens on the Ethereum blockchain. Let's compare the provided interfaces with the ERC-20 standard:

1. `transferFrom(address,address,uint256) returns(bool)` - This matches the ERC-20 specification for the `transferFrom` function.

2. `transfer(address,uint256) returns(bool)` - This matches the ERC-20 specification for the `transfer` function.

3. `balanceOf(address) returns(uint256)` - This matches the ERC-20 specification for the `balanceOf` function.

4. `approve(address,uint256) returns(bool)` - This matches the ERC-20 specification for the `approve` function.

5. `allowance(address,address) returns(uint256)` - This matches the ERC-20 specification for the `allowance` function.

6. `totalSupply() returns(uint256)` - This matches the ERC-20 specification for the `totalSupply` function. However, it is listed twice in the provided interfaces, which is unnecessary and should be corrected to have only one declaration.

7. `ZRXToken() returns()` - This function is not part of the ERC-20 standard. It seems to be a constructor or initialization function specific to the token implementation, which is not required by the standard.

8. `name() returns(string)` - This is an optional function in the ERC-20 standard and matches the specification.

9. `decimals() returns(uint8)` - This is an optional function in the ERC-20 standard and matches the specification.

10. `symbol() returns(string)` - This is an optional function in the ERC-20 standard and matches the specification.

Based on the provided information, the Solidity function interfaces mostly comply with the ERC-20 standard, with the exception of the `ZRXToken() returns()` function, which is not part of the standard, and the duplicate declaration of `totalSupply()`. The `ZRXToken()` function does not violate the standard as it is not required by ERC-20, but it should be noted that it is not part of the ERC-20 specification. The duplicate `totalSupply()` should be removed to clean up the interface.

Additionally, the ERC-20 standard requires two events: `Transfer` and `Approval`. These events are not listed in the provided interfaces, but they are essential for a compliant ERC-20 token contract. The contract should include these events to fully comply with the standard.