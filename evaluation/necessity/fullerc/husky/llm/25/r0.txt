The provided Solidity event interfaces are:

```
event Transfer(address indexed, address indexed, uint256);
event Approval(address indexed, address indexed, uint256);
event OwnershipTransferred(address indexed, address indexed);
```

The ERC in question appears to be the ERC-20 standard, which is a standard interface for fungible tokens on the Ethereum blockchain. The ERC-20 standard specifies two events:

```
event Transfer(address indexed _from, address indexed _to, uint256 _value);
event Approval(address indexed _owner, address indexed _spender, uint256 _value);
```

Comparing the provided event interfaces with the ERC-20 standard:

1. `event Transfer(address indexed, address indexed, uint256);`
   - This event matches the ERC-20 `Transfer` event specification. It is used to log transfers of tokens, including zero value transfers.

2. `event Approval(address indexed, address indexed, uint256);`
   - This event matches the ERC-20 `Approval` event specification. It is used to log the approval of a spender by an owner to use a specific amount of tokens.

3. `event OwnershipTransferred(address indexed, address indexed);`
   - This event does not match any event in the ERC-20 standard. It seems to be related to the transfer of ownership of the contract itself, which is not part of the ERC-20 token standard. This event is commonly found in contracts that have an ownership feature, allowing the current owner to transfer control of the contract to a new owner.

The first two events (`Transfer` and `Approval`) are required by the ERC-20 standard and are correctly implemented based on the provided interfaces. The third event (`OwnershipTransferred`) is not part of the ERC-20 standard, but its presence does not violate the standard. ERC-20 does not prohibit additional events from being included in the contract; it only specifies the minimum requirements for a token contract to be considered ERC-20 compliant.

Therefore, based on the provided event interfaces, the contract does not violate the ERC-20 standard. However, to fully determine ERC-20 compliance, one would also need to review the contract's functions and ensure they adhere to the standard's method specifications.