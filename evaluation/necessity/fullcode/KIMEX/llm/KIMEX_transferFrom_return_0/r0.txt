NO

The `transferFrom` function in the provided Solidity code does not fully comply with the ERC-20 standard's requirements for the `transferFrom` function. While it does return a boolean value indicating the success of the transfer, it lacks the necessary checks to ensure that the `_from` account has enough balance to transfer and that the `msg.sender` is allowed to transfer the specified `_value` from the `_from` account.

The ERC-20 standard requires that the `transferFrom` function should only succeed if the `_from` account has a sufficient balance and the `msg.sender` has been approved to transfer at least `_value` tokens on behalf of `_from`. The function should return `false` if these conditions are not met.

The provided code does not check if the `_from` account has a sufficient balance before attempting the transfer, nor does it check if `msg.sender` is allowed to transfer the specified amount. It only performs the transfer and assumes success without these validations.

To comply with the ERC-20 standard, the `transferFrom` function should include checks like:

```solidity
require(balances[_from] >= _value, "Insufficient balance");
require(allowed[_from][msg.sender] >= _value, "Insufficient allowance");
```

These checks should be performed before the balances are updated and the `Transfer` event is emitted. If either of these conditions is not met, the function should revert or return `false`.