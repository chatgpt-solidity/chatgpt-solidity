NO

The `transferFrom` function in the provided Solidity code does not explicitly throw an error if the `_value` to be transferred is 0. The function checks if the `_value` is greater than 0 using the `require` statement:

```solidity
require(
    allowed[_from][msg.sender] >= _value &&
    balances[_from] >= _value &&
    _value > 0
);
```

If `_value` is 0, this condition will fail, and the `require` statement will revert the transaction. However, this is not considered "throwing" in the traditional sense; it is a revert operation that undoes all state changes and can return the remaining gas to the caller. The term "throw" was used in earlier versions of Solidity to indicate an error, but it has been replaced by "revert" and "require" for better error handling and gas management.

Therefore, if a transfer of 0 value is attempted, the `require` statement will cause the transaction to revert, but it will not "throw" in the context of the question.