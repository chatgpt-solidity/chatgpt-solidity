NO

The `transferFrom` function in the provided code has a critical bug in the line where it updates the `allowed` mapping after the transfer:

```solidity
allowed[_from][msg.sender] = balances[msg.sender].sub(_value);
```

This line incorrectly uses `balances[msg.sender]` instead of `allowed[_from][msg.sender]` when updating the allowance. It should reduce the allowance by `_value`, not set the allowance to the sender's balance minus `_value`. The correct line should be:

```solidity
allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
```

Additionally, the `Transfer` event should be emitted with the `emit` keyword according to the latest Solidity standards:

```solidity
emit Transfer(_from, _to, _value);
```

Because of this bug, the function does not correctly follow the ERC-20 standard rule to return whether the transfer is successful, as it may incorrectly manage allowances and potentially cause other issues in the contract's logic.