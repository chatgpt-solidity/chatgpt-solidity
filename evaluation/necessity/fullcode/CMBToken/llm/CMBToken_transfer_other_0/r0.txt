NO

The provided Solidity function `transfer` in the `CMBToken` contract does not violate the ERC rule that states "Transfers of 0 values MUST be treated as normal transfers." The function does not explicitly check for a transfer value of 0 to reject it. The `require` statement ensures that the sender has enough balance and that the `_value` is greater than 0, which is not in violation of the rule, as it does not prevent 0-value transfers; it just doesn't explicitly handle them in any special way.

However, it's worth noting that the ERC-20 standard does not require that transfers of 0 value must be treated as normal transfers, but rather that they must be allowed. The standard states that a transfer event should be emitted even for a transfer of 0 value. The provided function does emit a `Transfer` event regardless of the transfer value, as long as the `require` condition is met (which includes the sender having a sufficient balance and the value being positive). If the sender has a balance of 0 and attempts to transfer 0, the function will revert due to the `require` statement, but this is not a violation of the ERC rule as stated, since the rule does not specify behavior in the case of insufficient balance.