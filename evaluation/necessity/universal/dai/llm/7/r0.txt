NO

The given Solidity code does not explicitly violate the provided ERC rule. The rule states that the `_from` account must have authorized the sender of the message via some mechanism. In the `transferFrom` function, there is a check to see if `src` (the `_from` account) is not the `msg.sender` and if `_approvals[src][msg.sender]` is not equal to `uint(-1)`, which is a common way to represent an unlimited allowance. If these conditions are met, it reduces the allowance (`_approvals[src][msg.sender]`) by the amount `wad` that is being transferred.

This implies that there is a mechanism in place for the `_from` account to authorize the `msg.sender` to transfer tokens on its behalf, which is typically done through the `approve` function in ERC20 tokens (not shown in the provided code but assumed to be part of the `DSTokenBase` contract as it inherits from `ERC20`). Therefore, the code does not violate the rule as it includes a mechanism for authorization.