Given a solidity code from a smart contract and a condition.
Whether the code contain the condition? Reply in "YES" or "NO".

Code:"""
contract EZOToken is ERC20, SafeMath, Haltable {

    //mapping of token balances
    mapping(address => uint256) balances;
    mapping(address => bool) public allowedAddresses;

    // Function will create new tokens and assign to investor's address
    function mint(
        address to,
        uint256 tokens
    ) public stopIfHalted returns (bool) {
        require(allowedAddresses[msg.sender]);
        totalSupply = safeAdd(totalSupply, tokens);
        balances[to] = safeAdd(balances[to], tokens);
        emit Mint(to, tokens);
        emit Transfer(address(0), to, tokens);
        return true;
    }
}

contract ERC20 {
    uint public totalSupply;
}

contract SafeMath {

    function safeAdd(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        assert(c >= a);
        return c;
    }
}

contract Haltable is Ownable {
    // @dev To Halt in Emergency Condition
    bool public halted = false;

    // @dev Use this as function modifier that should not execute if contract state Halted
    modifier stopIfHalted() {
        require(!halted);
        _;
    }
}
"""

Condition:"""
tokens are transferred, including zero value transfers.
"""
