NO

The given Solidity code for the `approve` function does indeed return a boolean value indicating whether the approval is successful. The function returns `true` after setting the allowance amount and emitting the `Approval` event, which is in line with the ERC-20 standard's requirement for the `approve` function to return a boolean. 

However, the code also includes additional logic in the `verifyTransaction` function that is not part of the standard ERC-20 `approve` function. This additional logic restricts approvals to only certain addresses that are active in the `allowedAddress` array. While this does not violate the ERC rule that the `approve` function must return whether the approval is successful, it does add constraints that are not specified in the standard ERC-20 token implementation. 

The ERC-20 standard does not require such verification for the `approve` function, so while the function returns the correct boolean value, the additional restrictions could be considered a deviation from the standard behavior expected from an ERC-20 token's `approve` function. However, since the question specifically asks if the code violates the rule of returning whether the `approve` is successful, the answer is "NO" because it does return the success status as required.