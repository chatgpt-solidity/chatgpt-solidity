NO

The provided Solidity code does not explicitly check whether the `_from` account has authorized the `msg.sender` to transfer tokens on its behalf. The ERC-20 standard requires that the `transferFrom` function should only allow a transfer if the `_from` account has approved the `msg.sender` to spend a certain amount of tokens.

The code should include a check to ensure that `allowed[_from][msg.sender]` is greater than or equal to `_value` before allowing the transfer to proceed. This check is missing in the provided code, which means it does not enforce the rule that the `_from` account must have authorized the `msg.sender`.

However, the code does attempt to subtract `_value` from `allowed[_from][msg.sender]` without a prior check, which could result in a revert due to the `SafeMath.sub` function if the allowance is not sufficient. This could indirectly enforce the rule, but it is not the correct way to validate allowances according to the ERC-20 standard. The standard approach is to explicitly check allowances before performing any state-changing operations.